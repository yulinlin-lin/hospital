<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sgu.mapper.RoleMapper">
    <resultMap id="roleMap" type="com.sgu.domain.Role">
        <id column="roleId" property="roleId"/>
        <result column="roleNum" property="roleNum"/>
        <result column="roleName" property="roleName"/>
        <result column="status" property="status"/>
        <result column="del" property="del"/>
        <!--
            collection 表示封装的结果是一个集合
                property 指定给哪个属性封装多个结果
                ofType 集合中的类型
        -->
        <collection property="resources" column="roleId" ofType="com.sgu.domain.RoleResources"
                    javaType="java.util.List" select="querylistRoleResources">
            <id property="resMiddleTableId" column="resMiddleTableId"/>

            <result property="roleId" column="roleId"/>

            <result property="resId" column="resId"/>

        </collection>
    </resultMap>


    <select id="queryOneById" resultMap="roleMap">

        select * from role where roleId = #{roleid,jdbcType=INTEGER}

    </select>

    <select id="querylistRoleResources" parameterType="java.lang.Integer" resultType="com.sgu.domain.RoleResources">

                select * from role_resources where roleId = #{roleId}

    </select>


    <select id="queryRolesByConditions" resultType="com.sgu.domain.Role">
        select * from role
        <where>
            <if test="roleName != null and roleName != ''">
                roleName like concat('%',#{roleName,jdbcType=VARCHAR},'%') and
            </if>
            del = 0 order by roleId desc
        </where>
    </select>
</mapper>